name: "CodeQL Analysis"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Run once a week on Sunday
  workflow_dispatch:  # Allow manual triggering

# Set permissions for GitHub Pages deployment
permissions:
  actions: read
  contents: read
  security-events: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        queries: +./.github/codeql/custom-queries

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript"
        output: sarif-results

    - name: Upload SARIF results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: codeql-sarif-results
        path: sarif-results
        retention-days: 7
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        
    # Debug step to see what's in the SARIF directory
    - name: Debug SARIF directory
      run: |
        find sarif-results -type f | sort
        
    # Create the dashboard directory structure
    - name: Setup directory structure
      run: |
        # Create directories for GitHub Pages deployment
        mkdir -p ./_site
        mkdir -p ./_site/reports
        
    # Generate dashboard data from SARIF files  
    - name: Generate dashboard data from SARIF
      run: |
        # Create a default empty dashboard data file
        echo '{"issues":[],"severityCounts":{"critical":0,"high":0,"medium":0,"low":0}}' > ./_site/dashboard-data.json
        
        # Run the dashboard generator script
        node .github/codeql/sarif-to-dashboard.js sarif-results ./_site/dashboard-data.json || echo "Error processing SARIF files - using default data"
        
        # For debugging - show the generated data
        echo "Generated dashboard data:"
        cat ./_site/dashboard-data.json
        
    # Create the dashboard HTML
    - name: Prepare HTML dashboard
      run: |
        # Copy the dashboard template
        cp .github/codeql/dashboard-template.html ./_site/index.html
        
        # Create a JavaScript file with the dashboard data
        echo "const dashboardData = $(cat ./_site/dashboard-data.json);" > ./_site/data.js
        
        # Inject the data script and replace mock data with real data
        sed -i '/<head>/a \    <script src="data.js"></script>' ./_site/index.html
        sed -i 's/const mockData = {.*}/const mockData = dashboardData/' ./_site/index.html
        
    # Generate HTML reports from SARIF files
    - name: Generate HTML report with SARIF Multitool
      run: |
        npm install -g @microsoft/sarif-multitool
        
        # Create index page for reports
        echo '<!DOCTYPE html>
        <html>
        <head>
            <title>CodeQL SARIF Reports</title>
            <style>
                body { font-family: Arial, sans-serif; max-width: 900px; margin: 0 auto; padding: 20px; }
                h1 { color: #333; }
                ul { list-style-type: none; padding: 0; }
                li { margin-bottom: 10px; }
                a { color: #0366d6; text-decoration: none; }
                a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <h1>CodeQL SARIF Reports</h1>
            <p><a href="../">Back to Dashboard</a></p>
            <ul>' > ./_site/reports/index.html
        
        # Process each SARIF file to generate HTML reports
        find sarif-results -type f -name "*.sarif" | while read file; do
          filename=$(basename "$file" .sarif)
          sarif-multitool transform -t HTML -o "./_site/reports/${filename}.html" "$file" || echo "Error processing $file"
          echo "<li><a href='${filename}.html'>${filename}</a></li>" >> ./_site/reports/index.html
        done
        
        echo '</ul>
        </body>
        </html>' >> ./_site/reports/index.html
        
    # Upload the HTML reports as artifacts
    - name: Upload reports as artifact
      uses: actions/upload-artifact@v4
      with:
        name: codeql-dashboard-and-reports
        path: ./_site
        retention-days: 7
        
    # Configure Pages
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    # Upload artifact for deployment
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./_site
        
    # Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      if: github.ref == 'refs/heads/main'
      uses: actions/deploy-pages@v4